;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name slekt.db-functions, :imports nil, :requires {reagent.core reagent.core, date slekt.date, r reagent.core, events slekt.events, slekt.date slekt.date, slekt.events slekt.events, slekt.relations slekt.relations, rels slekt.relations, slekt.database slekt.database, d slekt.database}, :uses nil, :defs {getEvent {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\src\\slekt\\db-functions.cljs", :line 14, :column 7, :end-line 14, :end-column 15, :arglists (quote ([id]))}, :name slekt.db-functions/getEvent, :variadic false, :file "src\\slekt\\db-functions.cljs", :end-column 15, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, set-event-edit-field {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\src\\slekt\\db-functions.cljs", :line 138, :column 7, :end-line 138, :end-column 27, :arglists (quote ([value key] [value key subid])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([value key] [value key subid]), :arglists ([value key] [value key subid]), :arglists-meta (nil nil)}}, :name slekt.db-functions/set-event-edit-field, :variadic false, :file "src\\slekt\\db-functions.cljs", :end-column 27, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([value key] [value key subid]), :arglists ([value key] [value key subid]), :arglists-meta (nil nil)}, :method-params ([value key] [value key subid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 138, :end-line 138, :max-fixed-arity 3, :fn-var true, :arglists ([value key] [value key subid])}, getFieldTypeID {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\src\\slekt\\db-functions.cljs", :line 70, :column 7, :end-line 70, :end-column 21, :arglists (quote ([type fields]))}, :name slekt.db-functions/getFieldTypeID, :variadic false, :file "src\\slekt\\db-functions.cljs", :end-column 21, :method-params ([type fields]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 2, :fn-var true, :arglists (quote ([type fields]))}, parse-name {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\src\\slekt\\db-functions.cljs", :line 83, :column 7, :end-line 83, :end-column 17, :arglists (quote ([value] [name fields result])), :doc "Creates map of name according to its template", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([value] [name fields result]), :arglists ([value] [name fields result]), :arglists-meta (nil nil)}}, :name slekt.db-functions/parse-name, :variadic false, :file "src\\slekt\\db-functions.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([value] [name fields result]), :arglists ([value] [name fields result]), :arglists-meta (nil nil)}, :method-params ([value] [name fields result]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 3, :fn-var true, :arglists ([value] [name fields result]), :doc "Creates map of name according to its template"}, event-list {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\src\\slekt\\db-functions.cljs", :line 51, :column 7, :end-line 51, :end-column 17, :arglists (quote ([links]))}, :name slekt.db-functions/event-list, :variadic false, :file "src\\slekt\\db-functions.cljs", :end-column 17, :method-params ([links]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 1, :fn-var true, :arglists (quote ([links]))}, populate-event-field {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\src\\slekt\\db-functions.cljs", :line 124, :column 7, :end-line 124, :end-column 27, :arglists (quote ([event] [fields event result])), :doc "Loops through the template of an event to make sure each field gets the correct value from the event", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([event] [fields event result]), :arglists ([event] [fields event result]), :arglists-meta (nil nil)}}, :name slekt.db-functions/populate-event-field, :variadic false, :file "src\\slekt\\db-functions.cljs", :end-column 27, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([event] [fields event result]), :arglists ([event] [fields event result]), :arglists-meta (nil nil)}, :method-params ([event] [fields event result]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 3, :fn-var true, :arglists ([event] [fields event result]), :doc "Loops through the template of an event to make sure each field gets the correct value from the event"}, events-into-list {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\src\\slekt\\db-functions.cljs", :line 32, :column 7, :end-line 32, :end-column 23, :arglists (quote ([nestedlist] [nestedlist final-list])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([nestedlist] [nestedlist final-list]), :arglists ([nestedlist] [nestedlist final-list]), :arglists-meta (nil nil)}}, :name slekt.db-functions/events-into-list, :variadic false, :file "src\\slekt\\db-functions.cljs", :end-column 23, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([nestedlist] [nestedlist final-list]), :arglists ([nestedlist] [nestedlist final-list]), :arglists-meta (nil nil)}, :method-params ([nestedlist] [nestedlist final-list]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 2, :fn-var true, :arglists ([nestedlist] [nestedlist final-list])}, add-sortable-date {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\src\\slekt\\db-functions.cljs", :line 18, :column 7, :end-line 18, :end-column 24, :arglists (quote ([event dateinfo]))}, :name slekt.db-functions/add-sortable-date, :variadic false, :file "src\\slekt\\db-functions.cljs", :end-column 24, :method-params ([event dateinfo]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([event dateinfo]))}, parse-event-field {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\src\\slekt\\db-functions.cljs", :line 110, :column 7, :end-line 110, :end-column 24, :arglists (quote ([field event])), :doc "Parses the event field to get correct values and updates the gui state"}, :name slekt.db-functions/parse-event-field, :variadic false, :file "src\\slekt\\db-functions.cljs", :end-column 24, :method-params ([field event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 2, :fn-var true, :arglists (quote ([field event])), :doc "Parses the event field to get correct values and updates the gui state"}, parse-event {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\src\\slekt\\db-functions.cljs", :line 26, :column 7, :end-line 26, :end-column 18, :arglists (quote ([event]))}, :name slekt.db-functions/parse-event, :variadic false, :file "src\\slekt\\db-functions.cljs", :end-column 18, :method-params ([event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([event]))}, setCurrent {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\src\\slekt\\db-functions.cljs", :line 66, :column 7, :end-line 66, :end-column 17, :arglists (quote ([value]))}, :name slekt.db-functions/setCurrent, :variadic false, :file "src\\slekt\\db-functions.cljs", :end-column 17, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, parse-event-date {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\src\\slekt\\db-functions.cljs", :line 95, :column 7, :end-line 95, :end-column 23, :arglists (quote ([value]))}, :name slekt.db-functions/parse-event-date, :variadic false, :file "src\\slekt\\db-functions.cljs", :end-column 23, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, setCurrentSelected {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\src\\slekt\\db-functions.cljs", :line 57, :column 7, :end-line 57, :end-column 25, :arglists (quote ([id]))}, :name slekt.db-functions/setCurrentSelected, :variadic false, :file "src\\slekt\\db-functions.cljs", :end-column 25, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, set-event-edit {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\src\\slekt\\db-functions.cljs", :line 160, :column 7, :end-line 160, :end-column 21, :arglists (quote ([key role]))}, :name slekt.db-functions/set-event-edit, :variadic false, :file "src\\slekt\\db-functions.cljs", :end-column 21, :method-params ([key role]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 160, :end-line 160, :max-fixed-arity 2, :fn-var true, :arglists (quote ([key role]))}, getPlaceDeprecated {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\src\\slekt\\db-functions.cljs", :line 74, :column 7, :end-line 74, :end-column 25, :arglists (quote ([event]))}, :name slekt.db-functions/getPlaceDeprecated, :variadic false, :file "src\\slekt\\db-functions.cljs", :end-column 25, :method-params ([event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 1, :fn-var true, :arglists (quote ([event]))}, find-role-id {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\src\\slekt\\db-functions.cljs", :line 144, :column 7, :end-line 144, :end-column 19, :arglists (quote ([role fields]))}, :name slekt.db-functions/find-role-id, :variadic false, :file "src\\slekt\\db-functions.cljs", :end-column 19, :method-params ([role fields]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 144, :end-line 144, :max-fixed-arity 2, :fn-var true, :arglists (quote ([role fields]))}, set-current-role {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\src\\slekt\\db-functions.cljs", :line 152, :column 7, :end-line 152, :end-column 23, :arglists (quote ([role template]))}, :name slekt.db-functions/set-current-role, :variadic false, :file "src\\slekt\\db-functions.cljs", :end-column 23, :method-params ([role template]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 152, :end-line 152, :max-fixed-arity 2, :fn-var true, :arglists (quote ([role template]))}, compare-dates {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\src\\slekt\\db-functions.cljs", :line 43, :column 7, :end-line 43, :end-column 20, :arglists (quote ([event1 event2]))}, :name slekt.db-functions/compare-dates, :variadic false, :file "src\\slekt\\db-functions.cljs", :end-column 20, :method-params ([event1 event2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 2, :fn-var true, :arglists (quote ([event1 event2]))}, name-string {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\src\\slekt\\db-functions.cljs", :line 101, :column 7, :end-line 101, :end-column 18, :arglists (quote ([props] [nameparts name])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([props] [nameparts name]), :arglists ([props] [nameparts name]), :arglists-meta (nil nil)}}, :name slekt.db-functions/name-string, :variadic false, :file "src\\slekt\\db-functions.cljs", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([props] [nameparts name]), :arglists ([props] [nameparts name]), :arglists-meta (nil nil)}, :method-params ([props] [nameparts name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 101, :end-line 101, :max-fixed-arity 2, :fn-var true, :arglists ([props] [nameparts name])}, get-nametemplate {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\src\\slekt\\db-functions.cljs", :line 179, :column 7, :end-line 179, :end-column 23, :arglists (quote ([] [templatename])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [templatename]), :arglists ([] [templatename]), :arglists-meta (nil nil)}}, :name slekt.db-functions/get-nametemplate, :variadic false, :file "src\\slekt\\db-functions.cljs", :end-column 23, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [templatename]), :arglists ([] [templatename]), :arglists-meta (nil nil)}, :method-params ([] [templatename]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 179, :end-line 179, :max-fixed-arity 1, :fn-var true, :arglists ([] [templatename])}, getPersona {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\src\\slekt\\db-functions.cljs", :line 10, :column 7, :end-line 10, :end-column 17, :arglists (quote ([id]))}, :name slekt.db-functions/getPersona, :variadic false, :file "src\\slekt\\db-functions.cljs", :end-column 17, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, edit-event {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\src\\slekt\\db-functions.cljs", :line 173, :column 7, :end-line 173, :end-column 17, :arglists (quote ([event]))}, :name slekt.db-functions/edit-event, :variadic false, :file "src\\slekt\\db-functions.cljs", :end-column 17, :method-params ([event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 173, :end-line 173, :max-fixed-arity 1, :fn-var true, :arglists (quote ([event]))}, save-event {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\src\\slekt\\db-functions.cljs", :line 188, :column 7, :end-line 188, :end-column 17, :arglists (quote ([]))}, :name slekt.db-functions/save-event, :variadic false, :file "src\\slekt\\db-functions.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 188, :end-line 188, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:role :address :date :selected :place :facttemplates :name :value :event/by-id :fields :gui/state :mother :type :template :fieldtemplates :event :father :label :id :values :sortable :current :persona/by-id :window/edit :defaultnametemplate}, :order [:persona/by-id :event/by-id :value :id :date :address :sortable :label :event :facttemplates :template :type :fields :selected :father :mother :gui/state :current :place :fieldtemplates :name :window/edit :values :role :defaultnametemplate]}, :doc nil}