;; Analyzed by ClojureScript 1.7.170
{:use-macros {cond-let datascript.db, case-tree datascript.db, defrecord-updatable datascript.db, raise datascript.db, combine-cmp datascript.db}, :excludes #{seqable?}, :name datascript.db, :imports nil, :requires {garray goog.array, goog.array goog.array, clojure.walk clojure.walk, da datascript.arrays, datascript.arrays datascript.arrays, btset datascript.btset, datascript.btset datascript.btset}, :uses nil, :defs {explode {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 934, :column 8, :end-line 934, :end-column 15, :private true, :arglists (quote ([db entity]))}, :private true, :name datascript.db/explode, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 15, :method-params ([db entity]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 934, :end-line 934, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db entity]))}, cmp-datoms-aevt-quick {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 339, :column 7, :end-line 339, :end-column 28, :arglists (quote ([d1 d2]))}, :name datascript.db/cmp-datoms-aevt-quick, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 28, :method-params ([d1 d2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 339, :end-line 339, :max-fixed-arity 2, :fn-var true, :arglists (quote ([d1 d2]))}, neg-number? {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 41, :column 28, :end-line 41, :end-column 39, :tag boolean, :private true, :arglists (quote ([x]))}, :private true, :name datascript.db/neg-number?, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 39, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :ret-tag boolean, :end-line 41, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x]))}, validate-datom {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 761, :column 7, :end-line 761, :end-column 21, :arglists (quote ([db datom]))}, :name datascript.db/validate-datom, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 21, :method-params ([db datom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 761, :end-line 761, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db datom]))}, rschema {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 530, :column 8, :end-line 530, :end-column 15, :private true, :arglists (quote ([schema]))}, :private true, :name datascript.db/rschema, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 15, :method-params ([schema]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 530, :end-line 530, :max-fixed-arity 1, :fn-var true, :arglists (quote ([schema]))}, hash-fdb {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 635, :column 8, :end-line 635, :end-column 16, :private true, :arglists (quote ([db]))}, :private true, :name datascript.db/hash-fdb, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 16, :method-params ([db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 635, :end-line 635, :max-fixed-arity 1, :fn-var true, :arglists (quote ([db]))}, validate-schema-key {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 538, :column 8, :end-line 538, :end-column 27, :private true, :arglists (quote ([a k v expected]))}, :private true, :name datascript.db/validate-schema-key, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 27, :method-params ([a k v expected]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 538, :end-line 538, :max-fixed-arity 4, :fn-var true, :arglists (quote ([a k v expected]))}, cljs-env? {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 52, :column 8, :end-line 52, :end-column 17, :private true, :arglists (quote ([env])), :doc "Take the &env from a macro, and tell whether we are expanding into cljs."}, :private true, :name datascript.db/cljs-env?, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 17, :method-params ([env]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([env])), :doc "Take the &env from a macro, and tell whether we are expanding into cljs."}, indexing? {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 723, :column 27, :end-line 723, :end-column 36, :tag boolean, :arglists (quote ([db attr]))}, :name datascript.db/indexing?, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 36, :method-params ([db attr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 722, :ret-tag boolean, :end-line 723, :max-fixed-arity 2, :tag boolean, :fn-var true, :arglists (quote ([db attr]))}, init-max-eid {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 575, :column 8, :end-line 575, :end-column 20, :private true, :arglists (quote ([eavt]))}, :private true, :name datascript.db/init-max-eid, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 20, :method-params ([eavt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 575, :end-line 575, :max-fixed-arity 1, :fn-var true, :arglists (quote ([eavt]))}, ->FilteredDB {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 455, :column 22, :end-line 455, :end-column 32, :internal-ctor true, :factory :positional, :arglists (quote ([unfiltered-db pred hash]))}, :name datascript.db/->FilteredDB, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 32, :method-params ([unfiltered-db pred hash]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 455, :end-line 455, :max-fixed-arity 3, :fn-var true, :arglists (quote ([unfiltered-db pred hash]))}, hash-datom {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 185, :column 8, :end-line 185, :end-column 18, :private true, :arglists (quote ([d]))}, :private true, :name datascript.db/hash-datom, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 18, :method-params ([d]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 185, :end-line 185, :max-fixed-arity 1, :fn-var true, :arglists (quote ([d]))}, is-attr? {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 707, :column 27, :end-line 707, :end-column 35, :tag boolean, :arglists (quote ([db attr property]))}, :name datascript.db/is-attr?, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 35, :method-params ([db attr property]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 706, :ret-tag boolean, :end-line 707, :max-fixed-arity 3, :tag boolean, :fn-var true, :arglists (quote ([db attr property]))}, -attrs-by {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 367, :column 4, :end-line 367, :end-column 13, :protocol datascript.db/IDB, :doc nil, :arglists (quote ([db property]))}, :protocol datascript.db/IDB, :name datascript.db/-attrs-by, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 13, :method-params ([db property]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 365, :end-line 367, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db property])), :doc nil}, cmp-val {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 291, :column 7, :end-line 291, :end-column 14, :arglists (quote ([o1 o2]))}, :name datascript.db/cmp-val, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 14, :method-params ([o1 o2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 291, :end-line 291, :max-fixed-arity 2, :fn-var true, :arglists (quote ([o1 o2]))}, -datoms {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 361, :column 4, :end-line 361, :end-column 11, :protocol datascript.db/IIndexAccess, :doc nil, :arglists (quote ([db index components]))}, :protocol datascript.db/IIndexAccess, :name datascript.db/-datoms, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 11, :method-params ([db index components]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 360, :end-line 361, :max-fixed-arity 3, :fn-var true, :arglists (quote ([db index components])), :doc nil}, init-db {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 583, :column 11, :end-line 583, :end-column 18, :tag DB, :arglists (quote ([datoms] [datoms schema])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([datoms] [datoms schema]), :arglists ([datoms] [datoms schema]), :arglists-meta (nil nil)}}, :name datascript.db/init-db, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([datoms] [datoms schema]), :arglists ([datoms] [datoms schema]), :arglists-meta (nil nil)}, :method-params ([datoms] [datoms schema]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 583, :ret-tag DB, :end-line 583, :max-fixed-arity 2, :tag DB, :fn-var true, :arglists ([datoms] [datoms schema])}, val-at-datom {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 200, :column 8, :end-line 200, :end-column 20, :private true, :arglists (quote ([d k not-found]))}, :private true, :name datascript.db/val-at-datom, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 20, :method-params ([d k not-found]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 200, :end-line 200, :max-fixed-arity 3, :fn-var true, :arglists (quote ([d k not-found]))}, equiv-datom {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 190, :column 8, :end-line 190, :end-column 19, :private true, :arglists (quote ([d o]))}, :private true, :name datascript.db/equiv-datom, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 19, :method-params ([d o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 190, :end-line 190, :max-fixed-arity 2, :fn-var true, :arglists (quote ([d o]))}, multival? {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 711, :column 27, :end-line 711, :end-column 36, :tag boolean, :arglists (quote ([db attr]))}, :name datascript.db/multival?, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 36, :method-params ([db attr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 710, :ret-tag boolean, :end-line 711, :max-fixed-arity 2, :tag boolean, :fn-var true, :arglists (quote ([db attr]))}, transact-add {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 951, :column 8, :end-line 951, :end-column 20, :private true, :arglists (quote ([report [_ e a v tx :as ent]]))}, :private true, :name datascript.db/transact-add, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 20, :method-params ([report p__19203]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 951, :end-line 951, :max-fixed-arity 2, :fn-var true, :arglists (quote ([report [_ e a v tx :as ent]]))}, transact-report {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 836, :column 8, :end-line 836, :end-column 23, :private true, :arglists (quote ([report datom]))}, :private true, :name datascript.db/transact-report, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 23, :method-params ([report datom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 836, :end-line 836, :max-fixed-arity 2, :fn-var true, :arglists (quote ([report datom]))}, transact-tx-data {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 999, :column 7, :end-line 999, :end-column 23, :arglists (quote ([initial-report initial-es]))}, :name datascript.db/transact-tx-data, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 23, :method-params ([initial-report initial-es]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 999, :end-line 999, :max-fixed-arity 2, :fn-var true, :arglists (quote ([initial-report initial-es]))}, pr-db {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 650, :column 10, :end-line 650, :end-column 15, :arglists (quote ([db w opts]))}, :name datascript.db/pr-db, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 15, :method-params ([db w opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 650, :end-line 650, :max-fixed-arity 3, :fn-var true, :arglists (quote ([db w opts]))}, multimap {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 524, :column 8, :end-line 524, :end-column 16, :private true, :arglists (quote ([e m]))}, :private true, :name datascript.db/multimap, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 16, :method-params ([e m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 524, :end-line 524, :max-fixed-arity 2, :fn-var true, :arglists (quote ([e m]))}, nth-datom {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 209, :column 8, :end-line 209, :end-column 17, :private true, :arglists (quote ([d i] [d i not-found])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([d i] [d i not-found]), :arglists ([d i] [d i not-found]), :arglists-meta (nil nil)}}, :private true, :name datascript.db/nth-datom, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([d i] [d i not-found]), :arglists ([d i] [d i not-found]), :arglists-meta (nil nil)}, :method-params ([d i] [d i not-found]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 209, :end-line 209, :max-fixed-arity 3, :fn-var true, :arglists ([d i] [d i not-found])}, IllegalArgumentException {:name datascript.db/IllegalArgumentException, :file "resources\\public\\js\\datascript\\db.cljc", :line 15, :column 6, :end-line 15, :end-column 35, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 15, :column 11, :end-line 15, :end-column 35}}, cmp-datoms-avet {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 313, :column 7, :end-line 313, :end-column 22, :arglists (quote ([d1 d2]))}, :name datascript.db/cmp-datoms-avet, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 22, :method-params ([d1 d2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 313, :end-line 313, :max-fixed-arity 2, :fn-var true, :arglists (quote ([d1 d2]))}, next-eid {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 788, :column 8, :end-line 788, :end-column 16, :private true, :arglists (quote ([db]))}, :private true, :name datascript.db/next-eid, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 16, :method-params ([db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 788, :end-line 788, :max-fixed-arity 1, :fn-var true, :arglists (quote ([db]))}, Datom {:num-fields 5, :protocols #{cljs.core/IIndexed cljs.core/IEquiv cljs.core/IHash cljs.core/ISeqable cljs.core/IPrintWithWriter cljs.core/IAssociative cljs.core/ILookup}, :name datascript.db/Datom, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 15, :type true, :column 10, :line 120, :record false, :end-line 120, :skip-protocol-flag #{cljs.core/IIndexed cljs.core/IEquiv cljs.core/IHash cljs.core/ISeqable cljs.core/IPrintWithWriter cljs.core/IAssociative cljs.core/ILookup}}, db? {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 449, :column 7, :end-line 449, :end-column 10, :arglists (quote ([x]))}, :name datascript.db/db?, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 10, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 449, :end-line 449, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, check-upsert-conflict {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 872, :column 8, :end-line 872, :end-column 29, :private true, :arglists (quote ([entity acc]))}, :private true, :name datascript.db/check-upsert-conflict, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 29, :method-params ([entity acc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 872, :end-line 872, :max-fixed-arity 2, :fn-var true, :arglists (quote ([entity acc]))}, -search {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 358, :column 4, :end-line 358, :end-column 11, :protocol datascript.db/ISearch, :doc nil, :arglists (quote ([data pattern]))}, :protocol datascript.db/ISearch, :name datascript.db/-search, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 11, :method-params ([data pattern]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 357, :end-line 358, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data pattern])), :doc nil}, equiv-db-index {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 620, :column 8, :end-line 620, :end-column 22, :private true, :arglists (quote ([x y]))}, :private true, :name datascript.db/equiv-db-index, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 22, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 620, :end-line 620, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, combine-hashes {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 64, :column 7, :end-line 64, :end-column 21, :arglists (quote ([x y]))}, :name datascript.db/combine-hashes, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 21, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, datom {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 178, :column 14, :end-line 178, :end-column 19, :tag Datom, :arglists (quote ([e a v] [e a v tx] [e a v tx added])), :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([e a v] [e a v tx] [e a v tx added]), :arglists ([e a v] [e a v tx] [e a v tx added]), :arglists-meta (nil nil nil)}}, :name datascript.db/datom, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([e a v] [e a v tx] [e a v tx added]), :arglists ([e a v] [e a v tx] [e a v tx added]), :arglists-meta (nil nil nil)}, :method-params ([e a v] [e a v tx] [e a v tx added]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 178, :ret-tag Datom, :end-line 178, :max-fixed-arity 5, :tag Datom, :fn-var true, :arglists ([e a v] [e a v tx] [e a v tx added])}, DB {:num-fields 8, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name datascript.db/DB, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 24, :type true, :column 22, :internal-ctor true, :line 373, :record true, :end-line 373, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, map->TxReport {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 704, :column 12, :end-line 704, :end-column 20, :internal-ctor true, :factory :map, :arglists (quote ([G__19156]))}, :name datascript.db/map->TxReport, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 20, :method-params ([G__19156]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 704, :end-line 704, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__19156]))}, cmp {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 280, :column 8, :end-line 280, :end-column 11, :private true, :arglists (quote ([o1 o2]))}, :private true, :name datascript.db/cmp, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 11, :method-params ([o1 o2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 280, :end-line 280, :max-fixed-arity 2, :fn-var true, :arglists (quote ([o1 o2]))}, maybe-wrap-multival {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 914, :column 8, :end-line 914, :end-column 27, :private true, :arglists (quote ([db a vs]))}, :private true, :name datascript.db/maybe-wrap-multival, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 27, :method-params ([db a vs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 914, :end-line 914, :max-fixed-arity 3, :fn-var true, :arglists (quote ([db a vs]))}, retract-components {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 975, :column 8, :end-line 975, :end-column 26, :private true, :arglists (quote ([db datoms]))}, :private true, :name datascript.db/retract-components, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 26, :method-params ([db datoms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 975, :end-line 975, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db datoms]))}, retry-with-tempid {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 989, :column 7, :end-line 989, :end-column 24, :arglists (quote ([report es tempid upserted-eid]))}, :name datascript.db/retry-with-tempid, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 24, :method-params ([report es tempid upserted-eid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 989, :end-line 989, :max-fixed-arity 4, :fn-var true, :arglists (quote ([report es tempid upserted-eid]))}, hash-db {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 628, :column 8, :end-line 628, :end-column 15, :private true, :arglists (quote ([db]))}, :private true, :name datascript.db/hash-db, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 15, :method-params ([db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 628, :end-line 628, :max-fixed-arity 1, :fn-var true, :arglists (quote ([db]))}, tx0 {:name datascript.db/tx0, :file "resources\\public\\js\\datascript\\db.cljc", :line 18, :column 1, :end-line 18, :end-column 17, :const true, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 18, :column 14, :end-line 18, :end-column 17, :const true}}, tx-id? {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 792, :column 28, :end-line 792, :end-column 34, :tag boolean, :private true, :arglists (quote ([e]))}, :private true, :name datascript.db/tx-id?, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 34, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 791, :ret-tag boolean, :end-line 792, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([e]))}, reverse-ref? {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 842, :column 27, :end-line 842, :end-column 39, :tag boolean, :arglists (quote ([attr]))}, :name datascript.db/reverse-ref?, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 39, :method-params ([attr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 841, :ret-tag boolean, :end-line 842, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([attr]))}, upsert-eid {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 887, :column 8, :end-line 887, :end-column 18, :private true, :arglists (quote ([db entity]))}, :private true, :name datascript.db/upsert-eid, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 18, :method-params ([db entity]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 887, :end-line 887, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db entity]))}, UnsupportedOperationException {:name datascript.db/UnsupportedOperationException, :file "resources\\public\\js\\datascript\\db.cljc", :line 16, :column 6, :end-line 16, :end-column 40, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 16, :column 11, :end-line 16, :end-column 40}}, validate-val {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 780, :column 8, :end-line 780, :end-column 20, :private true, :arglists (quote ([v at]))}, :private true, :name datascript.db/validate-val, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 20, :method-params ([v at]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 780, :end-line 780, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v at]))}, ->TxReport {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 704, :column 12, :end-line 704, :end-column 20, :internal-ctor true, :factory :positional, :arglists (quote ([db-before db-after tx-data tempids tx-meta]))}, :name datascript.db/->TxReport, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 20, :method-params ([db-before db-after tx-data tempids tx-meta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 704, :end-line 704, :max-fixed-arity 5, :fn-var true, :arglists (quote ([db-before db-after tx-data tempids tx-meta]))}, map->DB {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 373, :column 22, :end-line 373, :end-column 24, :internal-ctor true, :factory :map, :arglists (quote ([G__19021]))}, :name datascript.db/map->DB, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 24, :method-params ([G__19021]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 373, :end-line 373, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__19021]))}, cmp-datoms-eavt {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 299, :column 7, :end-line 299, :end-column 22, :arglists (quote ([d1 d2]))}, :name datascript.db/cmp-datoms-eavt, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 22, :method-params ([d1 d2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 299, :end-line 299, :max-fixed-arity 2, :fn-var true, :arglists (quote ([d1 d2]))}, cmp-datoms-aevt {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 306, :column 7, :end-line 306, :end-column 22, :arglists (quote ([d1 d2]))}, :name datascript.db/cmp-datoms-aevt, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 22, :method-params ([d1 d2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 306, :end-line 306, :max-fixed-arity 2, :fn-var true, :arglists (quote ([d1 d2]))}, entid-some {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 755, :column 7, :end-line 755, :end-column 17, :arglists (quote ([db eid]))}, :name datascript.db/entid-some, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 17, :method-params ([db eid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 755, :end-line 755, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db eid]))}, -seek-datoms {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 362, :column 4, :end-line 362, :end-column 16, :protocol datascript.db/IIndexAccess, :doc nil, :arglists (quote ([db index components]))}, :protocol datascript.db/IIndexAccess, :name datascript.db/-seek-datoms, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 16, :method-params ([db index components]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 360, :end-line 362, :max-fixed-arity 3, :fn-var true, :arglists (quote ([db index components])), :doc nil}, cmp-datoms-avet-quick {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 346, :column 7, :end-line 346, :end-column 28, :arglists (quote ([d1 d2]))}, :name datascript.db/cmp-datoms-avet-quick, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 28, :method-params ([d1 d2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 346, :end-line 346, :max-fixed-arity 2, :fn-var true, :arglists (quote ([d1 d2]))}, default-schema {:name datascript.db/default-schema, :file "resources\\public\\js\\datascript\\db.cljc", :line 19, :column 1, :end-line 19, :end-column 28, :const true, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 19, :column 14, :end-line 19, :end-column 28, :const true}}, validate-eid {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 770, :column 8, :end-line 770, :end-column 20, :private true, :arglists (quote ([eid at]))}, :private true, :name datascript.db/validate-eid, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 20, :method-params ([eid at]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 770, :end-line 770, :max-fixed-arity 2, :fn-var true, :arglists (quote ([eid at]))}, with-datom {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 818, :column 8, :end-line 818, :end-column 18, :private true, :arglists (quote ([db datom]))}, :private true, :name datascript.db/with-datom, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 18, :method-params ([db datom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 818, :end-line 818, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db datom]))}, empty-db {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 561, :column 11, :end-line 561, :end-column 19, :tag DB, :arglists (quote ([] [schema])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [schema]), :arglists ([] [schema]), :arglists-meta (nil nil)}}, :name datascript.db/empty-db, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [schema]), :arglists ([] [schema]), :arglists-meta (nil nil)}, :method-params ([] [schema]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 561, :ret-tag DB, :end-line 561, :max-fixed-arity 1, :tag DB, :fn-var true, :arglists ([] [schema])}, datom? {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 183, :column 7, :end-line 183, :end-column 13, :arglists (quote ([x]))}, :name datascript.db/datom?, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 183, :end-line 183, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, attr->properties {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 515, :column 7, :end-line 515, :end-column 23, :arglists (quote ([k v]))}, :name datascript.db/attr->properties, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 23, :method-params ([k v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 515, :end-line 515, :max-fixed-arity 2, :fn-var true, :arglists (quote ([k v]))}, resolve-datom {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 685, :column 8, :end-line 685, :end-column 21, :private true, :arglists (quote ([db e a v t]))}, :private true, :name datascript.db/resolve-datom, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 21, :method-params ([db e a v t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 685, :end-line 685, :max-fixed-arity 5, :fn-var true, :arglists (quote ([db e a v t]))}, cmp-attr-quick {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 323, :column 8, :end-line 323, :end-column 22, :private true, :arglists (quote ([a1 a2]))}, :private true, :name datascript.db/cmp-attr-quick, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 22, :method-params ([a1 a2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 323, :end-line 323, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a1 a2]))}, current-tx {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 785, :column 8, :end-line 785, :end-column 18, :private true, :arglists (quote ([report]))}, :private true, :name datascript.db/current-tx, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 18, :method-params ([report]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 785, :end-line 785, :max-fixed-arity 1, :fn-var true, :arglists (quote ([report]))}, allocate-eid {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 803, :column 8, :end-line 803, :end-column 20, :private true, :arglists (quote ([report eid] [report e eid])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([report eid] [report e eid]), :arglists ([report eid] [report e eid]), :arglists-meta (nil nil)}}, :private true, :name datascript.db/allocate-eid, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([report eid] [report e eid]), :arglists ([report eid] [report e eid]), :arglists-meta (nil nil)}, :method-params ([report eid] [report e eid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 803, :end-line 803, :max-fixed-arity 3, :fn-var true, :arglists ([report eid] [report e eid])}, TxReport {:num-fields 5, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name datascript.db/TxReport, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 20, :type true, :column 12, :internal-ctor true, :line 704, :record true, :end-line 704, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, components->pattern {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 696, :column 8, :end-line 696, :end-column 27, :private true, :arglists (quote ([db index [c0 c1 c2 c3]]))}, :private true, :name datascript.db/components->pattern, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 27, :method-params ([db index p__19148]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 696, :end-line 696, :max-fixed-arity 3, :fn-var true, :arglists (quote ([db index [c0 c1 c2 c3]]))}, ->DB {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 373, :column 22, :end-line 373, :end-column 24, :internal-ctor true, :factory :positional, :arglists (quote ([schema eavt aevt avet max-eid max-tx rschema hash]))}, :name datascript.db/->DB, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 24, :method-params ([schema eavt aevt avet max-eid max-tx rschema hash]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 373, :end-line 373, :max-fixed-arity 8, :fn-var true, :arglists (quote ([schema eavt aevt avet max-eid max-tx rschema hash]))}, datom-from-reader {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 240, :column 14, :end-line 240, :end-column 31, :tag Datom, :arglists (quote ([vec]))}, :name datascript.db/datom-from-reader, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 31, :method-params ([vec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 240, :ret-tag Datom, :end-line 240, :max-fixed-arity 1, :tag Datom, :fn-var true, :arglists (quote ([vec]))}, cmp-datoms-eavt-quick {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 332, :column 7, :end-line 332, :end-column 28, :arglists (quote ([d1 d2]))}, :name datascript.db/cmp-datoms-eavt-quick, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 28, :method-params ([d1 d2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 332, :end-line 332, :max-fixed-arity 2, :fn-var true, :arglists (quote ([d1 d2]))}, reverse-ref {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 854, :column 7, :end-line 854, :end-column 18, :arglists (quote ([attr]))}, :name datascript.db/reverse-ref, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 18, :method-params ([attr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 854, :end-line 854, :max-fixed-arity 1, :fn-var true, :arglists (quote ([attr]))}, entid-strict {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 749, :column 7, :end-line 749, :end-column 19, :arglists (quote ([db eid]))}, :name datascript.db/entid-strict, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 19, :method-params ([db eid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 749, :end-line 749, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db eid]))}, advance-max-eid {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 797, :column 8, :end-line 797, :end-column 23, :private true, :arglists (quote ([db eid]))}, :private true, :name datascript.db/advance-max-eid, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 23, :method-params ([db eid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 797, :end-line 797, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db eid]))}, ->Datom {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 120, :column 10, :end-line 120, :end-column 15, :protocols #{cljs.core/IIndexed cljs.core/IEquiv cljs.core/IHash cljs.core/ISeqable cljs.core/IPrintWithWriter cljs.core/IAssociative cljs.core/ILookup}, :skip-protocol-flag #{cljs.core/IIndexed cljs.core/IEquiv cljs.core/IHash cljs.core/ISeqable cljs.core/IPrintWithWriter cljs.core/IAssociative cljs.core/ILookup}, :factory :positional, :arglists (quote ([e a v tx added]))}, :protocols #{cljs.core/IIndexed cljs.core/IEquiv cljs.core/IHash cljs.core/ISeqable cljs.core/IPrintWithWriter cljs.core/IAssociative cljs.core/ILookup}, :name datascript.db/->Datom, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 15, :method-params ([e a v tx added]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 120, :end-line 120, :max-fixed-arity 5, :fn-var true, :arglists (quote ([e a v tx added])), :skip-protocol-flag #{cljs.core/IIndexed cljs.core/IEquiv cljs.core/IHash cljs.core/ISeqable cljs.core/IPrintWithWriter cljs.core/IAssociative cljs.core/ILookup}}, Exception {:name datascript.db/Exception, :file "resources\\public\\js\\datascript\\db.cljc", :line 14, :column 6, :end-line 14, :end-column 20, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 14, :column 11, :end-line 14, :end-column 20}}, FilteredDB {:num-fields 3, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name datascript.db/FilteredDB, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 32, :type true, :column 22, :internal-ctor true, :line 455, :record true, :end-line 455, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, validate-attr {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 775, :column 8, :end-line 775, :end-column 21, :private true, :arglists (quote ([attr at]))}, :private true, :name datascript.db/validate-attr, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 21, :method-params ([attr at]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 775, :end-line 775, :max-fixed-arity 2, :fn-var true, :arglists (quote ([attr at]))}, validate-schema {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 547, :column 8, :end-line 547, :end-column 23, :private true, :arglists (quote ([schema]))}, :private true, :name datascript.db/validate-schema, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 23, :method-params ([schema]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 547, :end-line 547, :max-fixed-arity 1, :fn-var true, :arglists (quote ([schema]))}, -schema {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 366, :column 4, :end-line 366, :end-column 11, :protocol datascript.db/IDB, :doc nil, :arglists (quote ([db]))}, :protocol datascript.db/IDB, :name datascript.db/-schema, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 11, :method-params ([db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 365, :end-line 366, :max-fixed-arity 1, :fn-var true, :arglists (quote ([db])), :doc nil}, equiv-db {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 644, :column 8, :end-line 644, :end-column 16, :private true, :arglists (quote ([db other]))}, :private true, :name datascript.db/equiv-db, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 16, :method-params ([db other]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 644, :end-line 644, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db other]))}, IIndexAccess {:meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 360, :column 14, :end-line 360, :end-column 26, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {-datoms [[db index components]], -seek-datoms [[db index components]], -index-range [[db attr start end]]}}}, :protocol-symbol true, :name datascript.db/IIndexAccess, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 26, :column 1, :line 360, :protocol-info {:methods {-datoms [[db index components]], -seek-datoms [[db index components]], -index-range [[db attr start end]]}}, :info nil, :end-line 360, :impls #{datascript.db/FilteredDB datascript.db/DB}, :doc nil, :jsdoc ("@interface")}, component? {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 719, :column 27, :end-line 719, :end-column 37, :tag boolean, :arglists (quote ([db attr]))}, :name datascript.db/component?, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 37, :method-params ([db attr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 718, :ret-tag boolean, :end-line 719, :max-fixed-arity 2, :tag boolean, :fn-var true, :arglists (quote ([db attr]))}, IDB {:meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 365, :column 14, :end-line 365, :end-column 17, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {-schema [[db]], -attrs-by [[db property]]}}}, :protocol-symbol true, :name datascript.db/IDB, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 17, :column 1, :line 365, :protocol-info {:methods {-schema [[db]], -attrs-by [[db property]]}}, :info nil, :end-line 365, :impls #{datascript.db/FilteredDB datascript.db/DB}, :doc nil, :jsdoc ("@interface")}, db-from-reader {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 678, :column 7, :end-line 678, :end-column 21, :arglists (quote ([{:keys [schema datoms]}]))}, :name datascript.db/db-from-reader, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 21, :method-params ([p__19139]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 678, :end-line 678, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [schema datoms]}]))}, assoc-datom {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 228, :column 15, :end-line 228, :end-column 26, :tag Datom, :private true, :arglists (quote ([d k v]))}, :private true, :name datascript.db/assoc-datom, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 26, :method-params ([d k v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 228, :ret-tag Datom, :end-line 228, :max-fixed-arity 3, :tag Datom, :fn-var true, :arglists (quote ([d k v]))}, map->FilteredDB {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 455, :column 22, :end-line 455, :end-column 32, :internal-ctor true, :factory :map, :arglists (quote ([G__19043]))}, :name datascript.db/map->FilteredDB, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 32, :method-params ([G__19043]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 455, :end-line 455, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__19043]))}, entid {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 726, :column 7, :end-line 726, :end-column 12, :arglists (quote ([db eid]))}, :name datascript.db/entid, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 12, :method-params ([db eid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 726, :end-line 726, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db eid]))}, -index-range {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 363, :column 4, :end-line 363, :end-column 16, :protocol datascript.db/IIndexAccess, :doc nil, :arglists (quote ([db attr start end]))}, :protocol datascript.db/IIndexAccess, :name datascript.db/-index-range, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 16, :method-params ([db attr start end]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 360, :end-line 363, :max-fixed-arity 4, :fn-var true, :arglists (quote ([db attr start end])), :doc nil}, cmp-num {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 285, :column 8, :end-line 285, :end-column 15, :private true, :arglists (quote ([n1 n2]))}, :private true, :name datascript.db/cmp-num, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 15, :method-params ([n1 n2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 285, :end-line 285, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n1 n2]))}, seqable? {:name datascript.db/seqable?, :file "resources\\public\\js\\datascript\\db.cljc", :line 29, :column 1, :end-line 29, :end-column 14, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 29, :column 6, :end-line 29, :end-column 14}}, seq-datom {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 195, :column 8, :end-line 195, :end-column 17, :private true, :arglists (quote ([d]))}, :private true, :name datascript.db/seq-datom, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 17, :method-params ([d]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 195, :end-line 195, :max-fixed-arity 1, :fn-var true, :arglists (quote ([d]))}, transact-retract-datom {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 971, :column 8, :end-line 971, :end-column 30, :private true, :arglists (quote ([report d]))}, :private true, :name datascript.db/transact-retract-datom, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 30, :method-params ([report d]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 971, :end-line 971, :max-fixed-arity 2, :fn-var true, :arglists (quote ([report d]))}, ISearch {:meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 357, :column 14, :end-line 357, :end-column 21, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {-search [[data pattern]]}}}, :protocol-symbol true, :name datascript.db/ISearch, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 21, :column 1, :line 357, :protocol-info {:methods {-search [[data pattern]]}}, :info nil, :end-line 357, :impls #{datascript.db/FilteredDB datascript.db/DB}, :doc nil, :jsdoc ("@interface")}, ref? {:protocol-inline nil, :meta {:file "E:\\kode\\slektsdatabase\\resources\\public\\js\\datascript\\db.cljc", :line 715, :column 27, :end-line 715, :end-column 31, :tag boolean, :arglists (quote ([db attr]))}, :name datascript.db/ref?, :variadic false, :file "resources\\public\\js\\datascript\\db.cljc", :end-column 31, :method-params ([db attr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 714, :ret-tag boolean, :end-line 715, :max-fixed-arity 2, :tag boolean, :fn-var true, :arglists (quote ([db attr]))}}, :require-macros {datascript.db datascript.db, da datascript.arrays, datascript.arrays datascript.arrays, btset datascript.btset, datascript.btset datascript.btset}, :cljs.analyzer/constants {:seen #{:transact/unique unfiltered-db tx-meta :tempids :schema rschema :attribute :transact/cas :lookup-ref/unique :db.unique/identity :db/index :max-tx :v :db/unique :hash :aevt a :pred :key :datom :else :db-after :added :new tempids :ns :db/valueType :avet schema :db.type/ref :value max-tx v map? :operation :max-eid hash db? aevt pred :entity-id db-after :op db :db/isComponent :db.fn/call :transact/upsert :e added avet :eavt :db.fn/retractEntity :db.unique/value or :db-before :tx-data :db/retract max-eid :tx nil? :db/current-tx :db.fn/retractAttribute :lookup-ref/syntax :db.fn/cas :entity-id/syntax e resolve-datom :db/cardinality :expected eavt :db/id :entity-id/missing db-before :context :error tx-data :schema/validation :db/add tx :unfiltered-db :rschema :tx-meta :db.cardinality/many :transact/syntax :entity :conflict :db.cardinality/one -index-range :a :datoms :assertion :old}, :order [:ns e a v tx added :v :added :e :tx :a :else :schema :eavt :aevt :avet :max-eid :max-tx :rschema :hash schema eavt aevt avet max-eid max-tx rschema hash db -index-range :unfiltered-db :pred unfiltered-db pred :db/isComponent :db.type/ref :db/index :db.cardinality/many :db.unique/identity :db/unique :db.unique/value :error :attribute :key :value :schema/validation :db/valueType :db/cardinality :db.cardinality/one or nil? map? :datoms resolve-datom :db-before :db-after :tx-data :tempids :tx-meta db-before db-after tx-data tempids tx-meta db? :entity-id :lookup-ref/syntax :lookup-ref/unique :entity-id/syntax :entity-id/missing :datom :transact/unique :context :transact/syntax :db/current-tx :db/id :entity :assertion :transact/upsert :conflict :db/add :db.fn/retractEntity :db.fn/call :db.fn/cas :old :expected :new :transact/cas :op :db/retract :db.fn/retractAttribute :operation]}, :doc nil}